---
- name   : playbook 5 for MySQL replica setup and restore www
  hosts  : mysqlrep
  become : yes
 
  tasks  :

  - name: copy MySQL repository
    copy:
      src   : /ansible/push/mysql/repository_add/etc/apt/sources.list.d/mysql.list
      dest  : /etc/apt/sources.list.d/mysql.list
      owner : root
      group : root
      mode  : '0644'
      backup: yes

  - name: copy MySQL repository keyring
    copy:
      src   : /ansible/push/mysql/repository_add/usr/share/keyrings/mysql-apt-config.gpg
      dest  : /usr/share/keyrings/mysql-apt-config.gpg
      owner : root
      group : root
      mode  : '0644'
      backup: yes

  - name: Execute command apt update
    shell: 
      cmd: "apt update"

  - name: Execute command install MySQL in noninteractive mode
    shell: 
      cmd: "export DEBIAN_FRONTEND=noninteractive && sudo -E apt install -y mysql-server"

  - name: create a directory if it does not exist /www
    ansible.builtin.file:
      path   : /www
      state  : directory
      mode   : '0777'

  - name: create a directory if it does not exist /backup
    ansible.builtin.file:
      path   : /backup
      state  : directory
      mode   : '0777'


  - name: Add line NFS /www to /etc/fstab
    ansible.builtin.lineinfile:
      path   : /etc/fstab
      line   : mowsprx1:/www                          /www        nfs   rw        0  0
      create : yes
      owner  : root
      group  : root
      mode   : '0644'

  - name: Add line NFS /backup to /etc/fstab
    ansible.builtin.lineinfile:
      path   : /etc/fstab
      line   : mowsprx1:/backup                          /backup        nfs   rw        0  0
      create : yes
      owner  : root
      group  : root
      mode   : '0644'

  - name: Execute command mount /install
    shell: 
      cmd: "systemctl daemon-reload && mount -a"

  

  - name: copy MySQL config
    copy:
      src   : /ansible/push/mysqlrep/etc/mysql/mysql.conf.d/mysqld.cnf
      dest  : /etc/mysql/mysql.conf.d/mysqld.cnf
      owner : root
      group : root
      mode  : '0644'
      backup: yes

  - name: restart MySQL
    systemd:
      unit: mysql.service
      state: restarted
      enabled: yes
      daemon_reload: yes

  - name: create a directory if it does not exist /scripts
    ansible.builtin.file:
      path   : /scripts
      state  : directory
      mode   : '0777'

  - name: copy backup and restore scripts backup_mysql.sh
    copy:
      src   : /ansible/push/mysqlrep/scripts/backup_mysql.sh
      dest  : /scripts/backup_mysql.sh
      owner : root
      group : root
      mode  : '0644'
      backup: yes

  - name: copy backup and restore scripts backup_mysql.sh
    copy:
      src   : /ansible/push/mysqlrep/scripts/backup_www.sh
      dest  : /scripts/backup_www.sh
      owner : root
      group : root
      mode  : '0644'
      backup: yes

  - name: copy backup and restore scripts backup_mysql.sh
    copy:
      src   : /ansible/push/mysqlrep/scripts/restore_www.sh
      dest  : /scripts/restore_www.sh
      owner : root
      group : root
      mode  : '0644'
      backup: yes

  - name: Execute command chmod x for /scripts
    shell: 
      cmd: chmod +x /scripts/*

  - name: Run script restore /www folder from latest backup 
    shell: 
      cmd: /scripts/restore_www.sh

  - name: copy cron file
    copy:
      src   : /ansible/push/mysqlrep/var/spool/cron/crontabs/root
      dest  : /var/spool/cron/crontabs/root
      owner : root
      group : root
      mode  : '0600'
      backup: yes

  - name: restart cron service
    systemd:
      unit: cron.service
      state: restarted
      enabled: yes
      daemon_reload: yes

  - name: Execute command MySQL stop replica
    shell: 
      cmd: mysql -e "STOP REPLICA;"

  - name: Execute command turn on MySQL replica
    shell: 
      cmd: mysql -e "CHANGE REPLICATION SOURCE TO SOURCE_HOST='mysqlsrs', SOURCE_USER='repl', SOURCE_PASSWORD='oTUSlave#2020', SOURCE_AUTO_POSITION = 1, GET_SOURCE_PUBLIC_KEY = 1;"

  - name: Execute command MySQL start replica
    shell: 
      cmd: mysql -e "START REPLICA;"

...
